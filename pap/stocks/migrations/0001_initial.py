# Generated by Django 5.1.4 on 2025-02-18 23:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('active', models.PositiveSmallIntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1)),
            ],
            options={
                'db_table': 'administrator',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.PositiveSmallIntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1)),
                ('nif', models.CharField(max_length=12)),
                ('name', models.CharField(max_length=200)),
                ('contact', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=200)),
                ('password', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'client',
            },
        ),
        migrations.CreateModel(
            name='ClientCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'client_category',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=200)),
                ('cod', models.CharField(max_length=2)),
                ('indicative', models.CharField(max_length=10)),
                ('active', models.PositiveSmallIntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idModule', models.IntegerField()),
                ('codModule', models.CharField(max_length=50)),
                ('module', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'modules',
            },
        ),
        migrations.CreateModel(
            name='OrderClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderdate', models.DateTimeField(auto_now_add=True)),
                ('closed', models.PositiveSmallIntegerField(choices=[(0, 'Closed'), (1, 'Active')], default=1)),
                ('totalvalue', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'order_client',
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentType', models.CharField(max_length=200)),
                ('active', models.PositiveSmallIntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1)),
            ],
            options={
                'db_table': 'payment_type',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'product_category',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('reference', models.CharField(blank=True, max_length=50, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(db_column='product_category_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='stocks.productcategory')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.PositiveSmallIntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1)),
                ('size', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'size',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.PositiveSmallIntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1)),
                ('nif', models.CharField(max_length=12)),
                ('name', models.CharField(max_length=200)),
                ('contact', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=200)),
                ('password', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(db_column='country_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='stocks.countries')),
            ],
            options={
                'db_table': 'supplier',
            },
        ),
        migrations.CreateModel(
            name='SupplierCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'supplier_category',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('position', models.CharField(max_length=50)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='AdministratorLogs',
            fields=[
                ('administrator', models.OneToOneField(db_column='administrator_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='stocks.administrator')),
                ('datalog', models.DateTimeField(auto_now_add=True)),
                ('logfile', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'administrator_logs',
            },
        ),
        migrations.CreateModel(
            name='ClientLogs',
            fields=[
                ('client', models.OneToOneField(db_column='client_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='stocks.client')),
                ('datalog', models.DateTimeField(auto_now_add=True)),
                ('logfile', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'client_logs',
            },
        ),
        migrations.CreateModel(
            name='ClientType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(db_column='client_category_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='stocks.clientcategory')),
            ],
            options={
                'db_table': 'client_type',
            },
        ),
        migrations.AddField(
            model_name='client',
            name='clienttype',
            field=models.ForeignKey(db_column='client_type_id', on_delete=django.db.models.deletion.CASCADE, to='stocks.clienttype'),
        ),
        migrations.CreateModel(
            name='ClientAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.PositiveSmallIntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1)),
                ('address', models.CharField(max_length=200)),
                ('postalcode', models.CharField(max_length=20)),
                ('locality', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(db_column='client_id', on_delete=django.db.models.deletion.CASCADE, to='stocks.client')),
                ('country', models.ForeignKey(db_column='country_id', on_delete=django.db.models.deletion.CASCADE, to='stocks.countries')),
            ],
            options={
                'db_table': 'client_address',
            },
        ),
        migrations.AddField(
            model_name='client',
            name='country',
            field=models.ForeignKey(db_column='country_id', on_delete=django.db.models.deletion.CASCADE, to='stocks.countries'),
        ),
        migrations.CreateModel(
            name='OrderClientBill',
            fields=[
                ('order', models.ForeignKey(db_column='order_client_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='stocks.orderclient')),
                ('clientname', models.CharField(max_length=200)),
                ('clientnif', models.CharField(max_length=12)),
                ('clientadress', models.CharField(max_length=200)),
                ('clientpostalcode', models.CharField(max_length=20)),
                ('clientlocality', models.CharField(max_length=200)),
                ('clientcity', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'order_client_bill',
            },
        ),
        migrations.AddField(
            model_name='orderclient',
            name='client',
            field=models.ForeignKey(db_column='client_id', on_delete=django.db.models.deletion.CASCADE, to='stocks.client'),
        ),
        migrations.CreateModel(
            name='Movements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('IN', 'Entrada'), ('OUT', 'Saída')], max_length=3)),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('movement_date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='stocks.products')),
            ],
            options={
                'db_table': 'movements',
            },
        ),
        migrations.CreateModel(
            name='StockProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('entry_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='stocks.products')),
            ],
            options={
                'db_table': 'product_stock',
            },
        ),
        migrations.CreateModel(
            name='SupplierLogs',
            fields=[
                ('supplier', models.OneToOneField(db_column='supplier_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='stocks.supplier')),
                ('datalog', models.DateTimeField(auto_now_add=True)),
                ('logfile', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'supplier_logs',
            },
        ),
        migrations.CreateModel(
            name='OrderSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderdate', models.DateTimeField(auto_now_add=True)),
                ('closed', models.PositiveSmallIntegerField(choices=[(0, 'Closed'), (1, 'Active')], default=1)),
                ('totalvalue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('supplier', models.ForeignKey(db_column='supplier_id', on_delete=django.db.models.deletion.CASCADE, to='stocks.supplier')),
            ],
            options={
                'db_table': 'order_supplier',
            },
        ),
        migrations.CreateModel(
            name='SupplierAdress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.PositiveSmallIntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1)),
                ('address', models.CharField(max_length=200)),
                ('postalcode', models.CharField(max_length=20)),
                ('locality', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(db_column='country_id', on_delete=django.db.models.deletion.CASCADE, to='stocks.countries')),
                ('supplier', models.ForeignKey(db_column='supplier_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='stocks.supplier')),
            ],
            options={
                'db_table': 'supplier_address',
            },
        ),
        migrations.CreateModel(
            name='SupplierType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(db_column='supplier_category_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='stocks.suppliercategory')),
            ],
            options={
                'db_table': 'supplier_type',
            },
        ),
        migrations.AddField(
            model_name='supplier',
            name='suppliertype',
            field=models.ForeignKey(db_column='supplier_type_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='stocks.suppliertype'),
        ),
        migrations.CreateModel(
            name='AdministratorModules',
            fields=[
                ('administrator', models.ForeignKey(db_column='administrator_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='stocks.administrator')),
                ('pView', models.PositiveSmallIntegerField(null=True)),
                ('pInsert', models.PositiveSmallIntegerField(null=True)),
                ('pUpdate', models.PositiveSmallIntegerField(null=True)),
                ('pDelete', models.PositiveSmallIntegerField(null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.modules')),
            ],
            options={
                'db_table': 'administrator_modules',
            },
        ),
        migrations.CreateModel(
            name='OrderClientPayment',
            fields=[
                ('order', models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='stocks.orderclient')),
                ('paymentvalue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('totalvalue', models.TextField(max_length=200)),
                ('paymenttype', models.ForeignKey(db_column='payment_type_id', on_delete=django.db.models.deletion.CASCADE, to='stocks.paymenttype')),
            ],
            options={
                'db_table': 'order_client_payment',
            },
        ),
        migrations.CreateModel(
            name='OrderClientProduct',
            fields=[
                ('order', models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='stocks.orderclient')),
                ('productvalue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('productref', models.CharField(max_length=50)),
                ('productsize', models.CharField(max_length=50)),
                ('quantity', models.IntegerField()),
                ('weight', models.DecimalField(decimal_places=5, max_digits=10)),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='stocks.products')),
            ],
            options={
                'db_table': 'order_client_product',
            },
        ),
        migrations.CreateModel(
            name='OrderSupplierProduct',
            fields=[
                ('order', models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='stocks.orderclient')),
                ('productvalue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('productref', models.CharField(max_length=50)),
                ('productsize', models.CharField(max_length=50)),
                ('quantity', models.IntegerField()),
                ('weight', models.DecimalField(decimal_places=5, max_digits=10)),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='stocks.products')),
            ],
            options={
                'db_table': 'order_supplier_product',
            },
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('product', models.OneToOneField(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='stocks.products')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.size')),
            ],
            options={
                'db_table': 'product_size',
            },
        ),
    ]
